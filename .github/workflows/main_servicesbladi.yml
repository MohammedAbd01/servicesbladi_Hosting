# Deploy Django App to Azure Web App - Optimized for Fast Deployment
name: Deploy Django App to Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent hanging workflows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create logs directory
        run: |
          mkdir -p backend/logs
          mkdir -p deployment/logs

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt      - name: Run Django migrations (skipped during build)
        run: |
          cd backend
          # Skip migrations during build to avoid DB connection issues
          # python manage.py makemigrations --noinput
          # python manage.py migrate --noinput
          # python manage.py createcachetable --noinput
          echo "Skipping migrations during build - will run in Azure startup"

      - name: Collect static files
        run: |
          cd backend
          echo "Collecting static files..."
          python manage.py collectstatic --noinput --clear
          echo "Static files collected successfully"

      - name: Run Django tests (optional)
        run: |
          cd backend
          # python manage.py test --noinput
          echo "Skipping tests for now"

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: daaecf53-bedf-479a-b16b-8b790712a16c
          tenant-id: 9210d1eb-8ed1-4887-acf7-e273346079fd
          subscription-id: 297a9bc4-d230-43c1-bfdb-f9b7c86494bd

      - name: Prepare deployment package
        run: |
          # Create deployment directory
          mkdir -p deployment
          
          # Copy backend files (including all Django apps)
          cp -r backend/* deployment/
          
          # Ensure frontend templates and static files are in the right place
          mkdir -p deployment/templates/frontend
          mkdir -p deployment/staticfiles/frontend
          
          # Copy frontend templates 
          if [ -d "frontend/template" ]; then
            cp -r frontend/template/* deployment/templates/frontend/
          fi
          
          # Copy frontend static files to be collected by Django
          if [ -d "frontend/static" ]; then
            cp -r frontend/static/* deployment/staticfiles/frontend/
          fi
          
          # Copy SSL certificate to root of deployment
          cp backend/BaltimoreCyberTrustRoot.crt.pem deployment/
          
          # Copy Azure configuration files
          cp web.config deployment/
          cp startup.txt deployment/
          cp azure_app_settings.json deployment/ || echo "Azure app settings not found, skipping"
          
          # Ensure logs directory exists
          mkdir -p deployment/logs
          
          # Set proper permissions for Azure
          chmod -R 755 deployment/

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: servicesbladi
          slot-name: production
          package: ./deployment
